<?php

namespace app\index\controller;

use app\xt\controller\BaseController;
use app\xt\model\User;
use think\Request;
use app\index\model\ExpertInformation as ExpertInfo;

/**
 * 用于实现专家信息相关功能
 * @package app\index\controller
 * @author 谢灿
 * @data 2019年6月17日
 */
class ExpertInformation extends BaseController
{
    /**
     * 专家列表显示
     * @auth 崔同海 2019-6-22
     * @return \think\Response
     * @throws \Exception
     */
    public function index()
    {
        try{
            $data=ExpertInfo::all();
        }catch (\Exception $e){
            throw $e;
        }
        return $this->returnJson(200,'列表显示成功',$data);
    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
    }

    /**
     * 新增专家信息
     * @auth 崔同海 2019-6-20
     * @param  \think\Request $request
     * @return \think\Response
     * @throws \Exception
     */
    public function save(Request $request)
    {
        $data=$request->param();
        $data['picture']=pictureUpload();
        try{
            $result=ExpertInfo::create($data);
        }catch (\Exception $e){
            throw $e;
        }
        return $this->returnJson(200,'用户添加成功',$data);
    }

    /**
     * 指定专家信息查询
     *
     * @param  int $id
     * @return \think\Response
     * @throws \Exception
     */
    public function read($id)
    {
        try{
            $data=ExpertInfo::get($id);
        }catch (\Exception $e) {
            throw $e;
        }
        return $this->returnJson(200,'专家信息查询成功',$data);
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 编辑专家信息（更新）
     * @auth 崔同海 2019-6-20
     * @param  \think\Request $request
     * @param  int $id
     * @return \think\Response
     * @throws \Exception
     */
    public function update(Request $request, $id)
    {
        $data = $request->param();
        $data['picture']=pictureUpload();
//        $user = getLoginedUser();
//        $data['operate_name']=$user->keyid;
        $data['operate_name']=User::get(LOGIN_MARK_SESSION_KEY)['user_name'];
        try{
            $result = ExpertInfo::update($data, ["key_id" => $id],true);
        }catch (\Exception $e){
            throw $e;
        }
        return $this->returnJson(200,'用户更新成功',$data);
    }

    /**
     * 专家信息删除
     * @auth 崔同海 2019-6-22
     * @param  int $id
     * @return \think\Response
     * @throws \Exception
     */
    public function delete($id)
    {
        try{
            $infoModel = new ExpertInfo();
            $infoModel->certificates()->where('fk_expert_info_id', $id)->delete();
            $infoModel -> where('key_id', $id)->delete();
        }catch (\Exception $e){
            throw $e;
        }
        return $this->returnJson(200,'专家信息及相关资格证书删除成功','');
    }
}
