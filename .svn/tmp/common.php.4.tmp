<?php
// +----------------------------------------------------------------------
// | ThinkPHP [ WE CAN DO IT JUST THINK ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006-2016 http://thinkphp.cn All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: 流年 <liu21st@gmail.com>
// +----------------------------------------------------------------------

// 应用公共文件

//  应用常量
use app\index\model\ExpertInformation;
use app\xt\model\Area;
use app\xt\model\BaseCode;
use think\Request;
use think\Session;
use PhpOffice\PhpWord\IOFactory;
use PhpOffice\PhpWord\PhpWord;

define('PHPSESSID', 'PHPSESSID'); //sessionID Cookie name in php
/**
 * 用户登录的session key
 */
define('LOGIN_MARK_SESSION_KEY', '_XT_USER_SESSION');
define('IN_USE', 1);
define('YES', 1);
define('NO', 0);
define('NOT_USE', 0);

/**
 * 接口返回数据表格格式
 * @param int $code 状态码 200=正常 400=访问错误 401=权限错误
 * @param int $count 返回条数
 * @param string $msg 返回信息
 * @param array $data 返回的data数据
 * @param int $json_option json格式 默认为 0 不需要修改.
 * @return \think\response\Json
 */
function returnPage($code, $count, $msg = '', $data = [], $json_option = 0)
{
    $returnJson = array('code' => $code,'count' => $count, 'msg' => $msg, 'data' => $data);
    returnData($returnJson, $json_option);
}

/**
 * 返回并中断连接
 * @param $returnJson
 * @param int $json_option
 */
function returnData($returnJson, $json_option = 0){
    header("Access-Control-Allow-Origin: *");
    header("Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, DELETE");
    echo json_encode($returnJson, $json_option);
    exit();
}

/**
 * 接口返回数据格式
 * @param int $code 状态码 200=正常 400=访问错误 401=权限错误
 * @param string $msg 返回信息
 * @param array $data 返回的data数据
 * @param int $json_option json格式 默认为 0 不需要修改.
 * @return \think\response\Json
 */
function returnJson($code, $msg = '', $data = [], $json_option = 0)
{
    $returnJson = array('code' => $code, 'msg' => $msg, 'data' => $data);
    returnData($returnJson, $json_option);
}

/**
 * 判断当前session是否已经登录,如果已经登录则返回User,否则返回null
 * @author 谢灿 2019-6-19
 * @return bool 登录返回true 未登录返回false;
 */
function isLogin()
{
    $user = Session::get(LOGIN_MARK_SESSION_KEY);
    return isset($user);
}

/**
 * 获取Session当前登录用户
 * @author 谢灿 2019-6-19
 * @return array $user 当前登录的用户信息
 */
function getLoginedUser()
{
    $user = Session::get(LOGIN_MARK_SESSION_KEY);
    if (!isset($user)) {
        $request = Request::instance();
        if ($request->isAjax()) {
            returnJson(401, 'error 401! Please login first.');
        } else {
            //重定向至登录页面
            header('Location: login');
            exit();
        }
    } else {
        return $user;
    }
}

/**
 * 图片上传
 * @return string 图片存储路径
 * @author 崔同海
 * @data 2019/6/20 08:56
*/
function pictureUpload(){
    $request=Request::instance();
    $picture=$request->file('picture');
    if ($picture){
        $picture_position=$picture->move(ROOT_PATH.'public'.DS.'static'.DS.'picture'.DS.'upload');
        if ($picture_position){
<<<<<<< .mine
            return DS.'chzu\public\static\picture\upload\\'.$picture_position->getSaveName();
=======
            return DS.'\static\picture\upload\\'.$picture_position->getSaveName();
>>>>>>> .r87
        }
        else{
            return $picture->getError();
        }
    }
}

/**
 * 资格证书上传
 * @return string 图片存储路径
 * @author 崔同海
 * @data 2019/6/20 08:56
 */
function imageUpload(){
    $request=Request::instance();
    $image=$request->file('image');
    if ($image){
        $image_position=$image->move(ROOT_PATH.'public'.DS.'static'.DS.'picture'.DS.'certificate');
        if ($image_position){
<<<<<<< .mine
            return DS.'chzu\public\static\picture\certificate\\'.$image_position->getSaveName();
=======
            return DS.'static\picture\certificate\\'.$image_position->getSaveName();
>>>>>>> .r87
        }
        else{
            return $image->getError();
        }
    }
}

/**
 * 基础代码中文输出
 * @param object $value 需要转换的参数
 * @return object $value 转换后的参数
 * @author 崔同海
 * @data 2019/7/4 11:47
 */
function expertName($value)
{
    $country_id= $value['fk_area_id'];
    $area = new Area();
    $result_country = $area
        ->field('dept_name as name,LEVEL_UP_KEYID as level_up')
        ->where('keyid', $country_id)
        ->find();
    $city_id = $result_country['level_up'];
    $result_city = $area
        ->field('dept_name as name,LEVEL_UP_KEYID as level_up')
        ->where('keyid', $city_id)
        ->find();
    $province_id = $result_city['level_up'];
    $result_province = $area
        ->field('dept_name as name')
        ->where('keyid', $province_id)
        ->find();
    $province_res = $result_province['name'];
    $city_res = $result_city['name'];
    $country_res = $result_country['name'];
    $value['fk_area_id'] = $province_res . $city_res . $country_res;
    $value['province_id']=$province_id;
    $value['city_id']=$city_id;
    $value['country_id']=$country_id;


    $base_code = new BaseCode();
    $second_profession = $value['fk_code_profession_id'];
    $result_second_profession = $base_code
        ->field('para_name as name,parent_ID as parent_id')
        ->where('key_id', $second_profession)
        ->find();
    $first_profession = $result_second_profession['parent_id'];
    $result_first_profession = $base_code
        ->field('para_name as name')
        ->where('key_id', $first_profession)
        ->find();
    $value['fk_code_profession_id'] = $result_first_profession['name'] . $result_second_profession['name'];

    $fk_code_gender_id = $value['fk_code_gender_id'];
    $result_fk_code_gender_id = $base_code
        ->field('para_name as name')
        ->where('Key_Id', $fk_code_gender_id)
        ->find();
    $value['fk_code_gender_id'] = $result_fk_code_gender_id['name'];

    $fk_code_title_id = $value['fk_code_title_id'];
    $result_fk_code_title_id = $base_code
        ->field('para_name as name')
        ->where('Key_Id', $fk_code_title_id)
        ->find();
    $value['fk_code_title_id'] = $result_fk_code_title_id['name'];

    $fk_code_major_id = $value['fk_code_major_id'];
    $result_fk_code_major_id = $base_code
        ->field('para_name as name')
        ->where('Key_Id', $fk_code_major_id)
        ->find();
    $value['fk_code_major_id'] = $result_fk_code_major_id['name'];

    if (isset($value['fk_certificate_type_id'])){
        $fk_certificate_type_id= $value['fk_certificate_type_id'];
        $result_fk_certificate_type_id = $base_code
            ->field('para_name as name')
            ->where('Key_Id', $fk_certificate_type_id)
            ->find();
        $value['fk_certificate_type_id'] = $result_fk_certificate_type_id['name'];
    }

    if (isset($value['fk_code_politics_status_id'])){
        $fk_code_politics_status_id= $value['fk_code_politics_status_id'];
        $result_fk_code_politics_status_id = $base_code
            ->field('para_name as name')
            ->where('Key_Id', $fk_code_politics_status_id)
            ->find();
        $value['fk_code_politics_status_id'] = $result_fk_code_politics_status_id['name'];
    }

    if (isset($value['fk_code_highest_degree_id'])){
        $fk_code_highest_degree_id= $value['fk_code_highest_degree_id'];
        $result_fk_code_highest_degree_id = $base_code
            ->field('para_name as name')
            ->where('Key_Id', $fk_code_highest_degree_id)
            ->find();
        $value['fk_code_highest_degree_id'] = $result_fk_code_highest_degree_id['name'];
    }

    if (isset($value['fk_code_first_education_id'])){
        $fk_code_first_education_id= $value['fk_code_first_education_id'];
        $result_fk_code_first_education_id= $base_code
            ->field('para_name as name')
            ->where('Key_Id', $fk_code_first_education_id)
            ->find();
        $value['fk_code_first_education_id'] = $result_fk_code_first_education_id['name'];
    }

    if (isset($value['fk_code_highest_education_id'])){
        $fk_code_highest_education_id= $value['fk_code_highest_education_id'];
        $result_fk_code_highest_education_id= $base_code
            ->field('para_name as name')
            ->where('Key_Id', $fk_code_highest_education_id)
            ->find();
        $value['fk_code_highest_education_id'] = $result_fk_code_highest_education_id['name'];
    }
    if (isset($value['fk_org_id'])){
        $fk_org_id= $value['fk_org_id'];
        $result_fk_org_id= $base_code
            ->field('para_name as name')
            ->where('Key_Id', $fk_org_id)
            ->find();
        $value['fk_org_id'] = $result_fk_org_id['name'];
    }


    if ($value['is_senior'] == '1') {
        $value['is_senior'] = '是';
    } else
        $value['is_senior'] = '否';

    if (isset($value['is_emergency'])){
        if ($value['is_emergency'] == '1') {
            $value['is_emergency'] = '是';
        } else
            $value['is_emergency'] = '否';
    }

    if (isset($value['is_trained'])){
        if ($value['is_trained'] == '1') {
            $value['is_trained'] = '是';
        } else
            $value['is_trained'] = '否';
    }
    return $value;
}

/**
 * excel文档导出
 * @author 崔同海
 * @data 2019/7/10 9:27
 */
function excelDown(){
    $expTitle='专家信息列表';
//    $result = ExpertInformation::get($id);
    $result=ExpertInformation::all();
    $data=json_decode(expertName($result[0]));
    $i=0;
    foreach ($data as $key => $value){
        $name[$i]=$key;
        $val[$i]=$value;
        $i++;
    }
    $expCellName=$name;
    $expTableData=$val;

    $xlsTitle = iconv('utf-8', 'gb2312', $expTitle);//文件名称
    $fileName = $expTitle;//or $xlsTitle 文件名称可根据自己情况设定

    $cellNum = count($expCellName);
    $dataNum = count($expTableData);
//    halt($cellNum);
    $objPHPExcel = new PHPExcel();//方法一
    $cellName = array('A','B', 'C','D', 'E', 'F','G','H','I', 'J', 'K','L','M', 'N', 'O', 'P', 'Q','R','S', 'T','U','V', 'W', 'X','Y', 'Z', 'AA',
        'AB', 'AC','AD','AE', 'AF','AG','AH','AI', 'AJ', 'AK', 'AL','AM','AN','AO','AP','AQ','AR', 'AS', 'AT','AU', 'AV','AW', 'AX',
        'AY', 'AZ');

    //设置列名称
    for ($i = 0; $i < $cellNum; $i++) {
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[$i] . '1', $expCellName[$i]);
    }
//    //赋值
//    /**
//     * 单条记录导出
//     */
//    for ($i = 0; $i < $cellNum; $i++) {
//        $objPHPExcel->setActiveSheetIndex(0)->setCellValue(
//            $cellName[$i].'2',$expTableData[$i]
//        );
//    }

    /**
     * 全部记录导出
     */
    for ($j=0;$j<count($result);$j++){
        $s=$j+2;
        $data=json_decode(expertName($result[$j]));
        $x=0;
        foreach ($data as $key => $value){
            $name[$x]=$key;
            $val[$x]=$value;
            $x++;
        }
        $expTableData=$val;
        for ($num = 0; $num < $cellNum; $num++){
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[$num].$s,$expTableData[$num]);
        }
    }


    ob_end_clean();//这一步非常关键，用来清除缓冲区防止导出的excel乱码
    header('pragma:public');
    header('Content-type:application/vnd.ms-excel;charset=utf-8;name="' . $xlsTitle . '.xls"');
    header("Content-Disposition:attachment;filename=$fileName.xls");//"xls"参考下一条备注
    $objWriter = PHPExcel_IOFactory::createWriter(
        $objPHPExcel, 'Excel5'
    );//"Excel2007"生成2007版本的xlsx，"Excel5"生成2003版本的xls
    $objWriter->save('php://output');
    exit;
}

/**
 * word文档导出
 * @param int $id 专家信息key_id
 * @author 崔同海
 * @data 2019/7/8 10:45
 */
function wordDown($id){
    $param=ExpertInformation::get($id);
    $result=expertName($param);
//    halt($result);

    //调用插件
    vendor('PHPWord');
    vendor('PHPWord.IOFactory');

    $phpWord  =  new PhpWord();      //实例化phpWord类
    $properties = $phpWord->getDocInfo();
    $properties->setCreator('崔同海');     //创建者
    $properties->setCompany('新德音');    //公司
    $properties->setTitle('My title');    //biao
    $properties->setDescription('My description');    //描述
    $properties->setCategory('My category');    //分类
    $properties->setLastModifiedBy('崔同海');    //最后修改者
    $properties->setCreated( mktime(9, 29, 0, 6, 28, 2019) );    //创建时间
    $properties->setModified( mktime(9, 29, 0, 6, 28, 2019) );    //修改时间
    $properties->setSubject('My subject');     //主题
    $properties->setKeywords('my, key, word');    //关键字

    $sectionStyle = array();
    $section = $phpWord->addSection($sectionStyle);    //创建一个有样式的页面

    //设置段样式
    $paragraphStyle = [
        'align'=>'center',
    ];

    //设置标题样式
    $titleStyle=[
        'size' => '20',
        'color' => 'black',
        'bold' => true,
    ];

    //添加标题(相关样式需要单独设置)
    $phpWord->addTitleStyle(1, $titleStyle,$paragraphStyle);
    $section->addTitle('专家信息表', 1);


    //设置文本样式
    $fontStyle = [
        'bold' => true,     //是否加粗
        'size' => '18',
        'color' => 'black',     //字体颜色
    ];

    //设置表格key属性文本样式
    $table_key_fontStyle=[
        'bold' => true,     //是否加粗
        'size' => '10',
        'color' => 'black',     //字体颜色
        'name'=>'微软雅黑',
    ];

    //设置表格中value属性文本样式
    $table_value_fontStyle=[
        'bold' => false,     //是否加粗
        'size' => '10',
        'color' => 'black',     //字体颜色
        'align'=>'center',
        'name'=>'微软雅黑',
    ];

    //添加页脚方法
    $footer = $section->addFooter();
    $footer->addPreserveText('Page {PAGE} of {NUMPAGES}.');     //向页眉或页脚添加页码或页数
    $breakCount = 0;       //设置换行数
    $section->addTextBreak($breakCount, $fontStyle, $paragraphStyle);       //设置换行

    $styleTable = [
        'borderSize'=>1,
        'borderColor'=>'black',
        'cellMargin'=>80,
    ];
    $styleImage=[
        'width'=>150,
        'height'=>147,
    ];
    $styleImage1=[
        'width'=>140,
        'height'=>170,
        'valign' => 'center',
        'align' => 'center'
    ];
    $styleCell = ['valign' => 'center'];
    // Add table style
    $phpWord->addTableStyle('myOwnTableStyle', $styleTable);
    // Add table
    $table = $section->addTable('myOwnTableStyle');

    $result['picture']=str_replace("\\","/",$result['picture']);
    // Add row设置行高
    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('姓名',$table_key_fontStyle,$paragraphStyle);
    $table->addCell(1800, array('gridSpan' => 2,'valign' => 'center'))->addText($result['name'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(900, array('valign' => 'center','vMerge' => 'restart'))->addText('证件照', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2800, array('gridSpan' => 2,'valign' => 'center','vMerge' => 'restart'))->addImage('http://localhost:8088'.$result['picture'],$styleImage1);

    $table->addRow();
    $table->addCell(1490, $styleCell)->addText('性别', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_code_gender_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(900, array('valign' => 'center','vMerge' => 'continue'));
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center','vMerge' => 'continue'));

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('初审部门', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText('暂无', $table_value_fontStyle,$paragraphStyle);
    $table->addCell(900, array('valign' => 'center','vMerge' => 'continue'));
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center','vMerge' => 'continue'));

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('银行卡号', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['bank_code'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(900, array('valign' => 'center','vMerge' => 'continue'));
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center','vMerge' => 'continue'));

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('证件类型', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_certificate_type_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(900, array('valign' => 'center','vMerge' => 'continue'));
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center','vMerge' => 'continue'));

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('证件号码', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['cerificate_code'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(900, array('valign' => 'center','vMerge' => 'continue'));
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center','vMerge' => 'continue'));

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('是否应急专家', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['is_emergency'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(900, array('valign' => 'center','vMerge' => 'continue'));
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center','vMerge' => 'continue'));

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('是否培训', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['is_trained'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('啦啦（填充）', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText('测试证件照用，为了美化整体', $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('政治面貌', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_code_politics_status_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('出生日期', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['birthday'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('社会保障卡号', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['social_security_cards_code'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('最高学位', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_code_highest_degree_id'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('职称', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_code_title_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('职称证书号', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['title_certificate_code'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('职务', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['position'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('所属行业', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_code_profession_id'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('第一学历', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_code_first_education_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('第一学历毕业院校及专业', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['first_graduate_school_and_major'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('最高学历', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_code_highest_education_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('最高学历毕业院校及专业', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['highest_graduate_school_and_major'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('从事专业', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_code_major_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('从事专业年限', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['marjor_age'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('地区', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_area_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('工龄', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['working_age'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('是否退休', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText('', $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('是否资深专家', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['is_senior'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('工作单位及组织机构代码', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['fk_org_id'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('单位地址', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText('', $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('移动电话', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['phone'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('单位电话', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText('', $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('住宅电话', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText('', $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('单位邮编', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText('', $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('家庭地址', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['address'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('家庭邮编', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['post_code'], $table_value_fontStyle,$paragraphStyle);

    $table->addRow(250);
    $table->addCell(1490, $styleCell)->addText('电子邮箱', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['email_address'], $table_value_fontStyle,$paragraphStyle);
    $table->addCell(1490, $styleCell)->addText('专业技术特长', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2,'valign' => 'center'))->addText($result['professional_technical_expertise'], $table_value_fontStyle,$paragraphStyle);

    $result['picture']=str_replace("\\","/",$result['picture']);

    $table->addRow(3000);
    $table->addCell(1490, $styleCell)->addText('附件一', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2))->addImage('http://localhost:8088'.$result['picture'],$styleImage);
    $table->addCell(1490, $styleCell)->addText('附件二', $table_key_fontStyle,$paragraphStyle);
    $table->addCell(2980, array('gridSpan' => 2))->addImage('http://localhost:8088'.$result['picture'],$styleImage);

    header('Content-type: application/docx');
    header('Content-Disposition: attachment; filename="专家信息表.docx"');

    $objWriter = IOFactory::createWriter($phpWord, 'Word2007');
    $objWriter->save('php://output');
    exit;
}
